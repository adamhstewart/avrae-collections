<drac2>
#Define variables for later use
desc = "A potion of healing is a real lifesaver!"
noCC = "You do not have this ability."
ch=character()
c=combat()
args = &ARGS&

## Setup the counter.
if "greater" in args:
    cc = "Potions of Greater Healing"
elif "superior" in args:
    cc = "Potions of Superior Healing"
else:
    cc = "Potions of Healing"

#Create the counter if it doesn't already
ch.create_cc_nx(cc, 0, None, None, None, None, None, cc, desc)


##Check if we are in combat.
if not c:
    err('This channel is not in combat.')

# Setup type based on argument.
if args[0] in ["add", "remove"]:
    action = args[0]  # 'add' or 'remove'

    # Extract all numbers from the arguments
    numbers = [int(a) for a in args if a.isdigit()]

    if len(numbers) != 1:
        err("Please include exactly one number to add, like `!healpot add 3` or `!healpot remove greater 2`.")

    num = numbers[0]
    # Use negative for remove
    num = num if action == "add" else -num

    ch.mod_cc(cc, num)

    # Message text
    verb = "adds" if num > 0 else "removes"

elif args[0] == "use":
    # Check that the character has the potion
    if not ch.cc_exists(cc):
        err(f"You don't have any {cc}.")
    if ch.get_cc(cc) <= 0:
        err(f"You are out of {cc}!")

    # Define the healing roll for each potion type
    healing_rolls = {
        "Potions of Healing": "2d4 + 2",
        "Potions of Greater Healing": "4d4 + 4",
        "Potions of Superior Healing": "8d4 + 8"
    }

    # Roll healing
    formula = healing_rolls[cc]
    result = vroll(formula)
    healing = result.total

    # Subtract 1 potion
    ch.mod_cc(cc, -1)

    # Heal character
    hp_change = ch.modify_hp(healing, False, False)
    desc = f"{formula} = {healing} HP healed.\n\n{hp_change}"

    verb = "uses a"

else:
    err("We haven't gotten there yet.")

#Logic of the alias. Check for all the necessary conditions.

if ch.cc_exists(cc) and ch.get_cc(cc):
    D = desc
    increment = f""
elif ch.cc_exists(cc):
    D = "You have no healing potions left."
else:
    D = "Something went very wrong."

## Build the embed.
T = f"{name} {verb} {cc}!"
F = f"{cc}|{ch.cc_str(cc)} ({'+' if num > 0 else ''}{num})"

base = f'''embed -title "{T}" -color {color} -thumb {image} -desc "{D}" -f "{F}"'''
return base
</drac2>
